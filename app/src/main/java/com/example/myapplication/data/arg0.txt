  {         int i=11;
            methodVisitor = classWriter.visitMethod(ACC_PROTECTED, "realCall", "()V", null, null);
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/Exception");
            Label label3 = new Label();
            Label label4 = new Label();
            Label label5 = new Label();
            methodVisitor.visitTryCatchBlock(label3, label4, label5, "java/lang/Exception");
            methodVisitor.visitLabel(label0);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 1+i);
            methodVisitor.visitLdcInsn("delete");
            methodVisitor.visitVarInsn(ASTORE, 2+i);
            methodVisitor.visitLdcInsn("\u786e\u5b9a\u6267\u884c\u522a\u9664\u64cd\u4f5c");
            methodVisitor.visitVarInsn(ASTORE, 3+i);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "getClass", "()Ljava/lang/Class;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getDeclaredMethods", "()[Ljava/lang/reflect/Method;", false);
            methodVisitor.visitVarInsn(ASTORE, 4+i);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 5+i);
            Label label6 = new Label();
            methodVisitor.visitLabel(label6);
            methodVisitor.visitVarInsn(ILOAD, 5+i);
            methodVisitor.visitVarInsn(ALOAD, 4+i);
            methodVisitor.visitInsn(ARRAYLENGTH);
            Label label7 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPGE, label7);
            methodVisitor.visitVarInsn(ALOAD, 4+i);
            methodVisitor.visitVarInsn(ILOAD, 5+i);
            methodVisitor.visitInsn(AALOAD);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Method", "getName", "()Ljava/lang/String;", false);
            methodVisitor.visitVarInsn(ALOAD, 2+i);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
            Label label8 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label8);
            methodVisitor.visitVarInsn(ALOAD, 4+i);
            methodVisitor.visitVarInsn(ILOAD, 5+i);
            methodVisitor.visitInsn(AALOAD);
            methodVisitor.visitVarInsn(ASTORE, 1+i);
            methodVisitor.visitJumpInsn(GOTO, label7);
            methodVisitor.visitLabel(label8);
            methodVisitor.visitIincInsn(5+i, 1);
            methodVisitor.visitJumpInsn(GOTO, label6);
            methodVisitor.visitLabel(label7);
            methodVisitor.visitVarInsn(ALOAD, 1+i);
            Label label9 = new Label();
            methodVisitor.visitJumpInsn(IFNONNULL, label9);
            methodVisitor.visitTypeInsn(NEW, "java/lang/RuntimeException");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
            methodVisitor.visitLdcInsn("don't fond method  [");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
            methodVisitor.visitVarInsn(ALOAD, 2+i);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
            methodVisitor.visitLdcInsn("] in class [");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "getClass", "()Ljava/lang/Class;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getName", "()Ljava/lang/String;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
            methodVisitor.visitLdcInsn("]");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/RuntimeException", "<init>", "(Ljava/lang/String;)V", false);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label9);
            methodVisitor.visitVarInsn(ALOAD, 3+i);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 1+i);
            methodVisitor.visitInsn(ICONST_0);//array的数量
            methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
            //插入arg
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/example/myapplication/ConfirmUtil", "doConfirm", "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)V", false);
            methodVisitor.visitLabel(label1);
            Label label10 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label10);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitVarInsn(ASTORE, 1+i);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 1+i);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/example/myapplication/ConfirmUtil", "callError", "(Ljava/lang/Object;Ljava/lang/Exception;)V", false);
            methodVisitor.visitLabel(label4);
            methodVisitor.visitJumpInsn(GOTO, label10);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitVarInsn(ASTORE, 2+i);
            methodVisitor.visitVarInsn(ALOAD, 2+i);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Exception", "printStackTrace", "()V", false);
            methodVisitor.visitLabel(label10);
            methodVisitor.visitInsn(RETURN);
            methodVisitor.visitMaxs(4, 6);//操作数值，规则不一样
            methodVisitor.visitEnd();
        }